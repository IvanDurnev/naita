from app.models import User


HELLO_LOGOUT = '''Привет! Я ИИ-Ассистент Найта, который помогает талантам в трудоустройстве. 

Здесь ты сможешь пройти прескрининг на одну из крутых вакансий ОТП Банка и получить приглашение на собеседование, а еще сделать классное резюме для себя.

Пожалуйста, авторизуйся.'''

REGISTER_PLEASE = 'Пожалуйста, авторизуйся.'

RESUME_SAVED = 'Твоё резюме сохранено, спасибо!'

RESUME_NOT_SAVED = 'Не удалось сохранить твое резюме. Возможно ссылка некорректная. Пришли, пожалуйста, еще раз.'

SELECT_VACANCIES = '''Привет! Я ИИ-Ассистент Найта, который помогает талантам в трудоустройстве. 

Здесь ты сможешь пройти прескрининг на одну из крутых вакансий ОТП Банка и получить приглашение на собеседование, а еще сделать классное резюме для себя.

Выбери вакансию, которая тебя интересует'''

VACANCY_SELECTED = '''Отлично. Я задам тебе несколько вопросов, сформирую для тебя резюме, и в случае совпадения твоих навыков и опыта с требованиями вакансии сразу же передам твои контакты специалисту ОТП Банка для прохождения интервью. Давай начнем!'''

NEW_VACANCY_SELECTED = '''Хорошо, передаю твое резюме и контактные данные - в ближайшие дни с тобой свяжется специалист, чтобы договориться о встрече.'''

SUGGEST_TO_CHECK_ANOTHER_VACANCIES = '''Проверить соответствие твоего резюме другим вакансиям в ОТП?'''

THERES_NO_ANY_VACANCY_FOR_YOU = 'Для тебя не нашлось подходящих вакансий'

# Если в запросе от пользователя есть информация об образовании, то education=информация об образовании
# Если в запросе от пользователя есть информация об опыте работы, то experience=информация об опыте работы
# Если в запросе от пользователя есть информация о навыках, умениях, возможностях человека (могу, умею, практикую), то skills=информация о навыках, умениях человека
# Если в запросе от пользователя есть информация о наградах, премиях, то awards=информация о наградах, премиях
# Если в запросе от пользователя есть информация о желаемой должности или кем хочет работать, то position=информация о желаемой должности или кем хочет работать

YA_GPT_PROMPT_PREFIX = '''Посмотри запрос пользователя.
Распредели данные пользователя по полям следующего JSON объекта
Верни информацию в виде JSON:
{"request": запрос пользователя,
"secure_request": запрос пользователя, в котором все Конфиденциальные данные заменены на ***,
"main_education": основное образование or "",
"add_education": дополнительное образование or "",
"experience": опыт работы or "",
"hard_skills": твердые компетенции or "",
"soft_skills": мягкие компетенции or ""
"awards": награды, премии or ""}

Конфиденциальные данные - это только номера документов, информация о здоровье, номера банковских карт.

Вот запрос пользователя:
'''

YA_GPT_DATA_REQUEST = '''Посмотри информацию о обо мне. Строго проверь, что от меня получена информация по каждому пункту эталонного профиля.

Пункты эталонного профиля:
1) main_education - обязательная информация
 a. Высшие, средние учебные заведения
 b. Полученные специальности  - переменная
 с. В каком году окончено обучение в каждом из учебных заведений?
 
2) add_education - обязательная информация
 a. Оффлайн или онлайн курсы
 b. Полученные специальности
 с. В каком году окончено обучение в каждом из учебных заведений?
 Если есть хотя-бы одна запись - этого достаточно.

3) experience - обязательная информация
 а. Места работы за последние 5 лет
 б. Годы начала и окончания работы на каждом месте работы

4) hard_skills - какими твердыми компетенциями для выбранной вакансии обладаешь? - обязательная информация
5) soft_skills - какими мягкими компетенциями для выбранной вакансии обладаешь? - обязательная информация
6) awards - какие имеешь профессиональные награды или премии? - обязательная информация

Если по какому-то из пунктов эталонного профиля совсем нет информации, значит профиль не полный. 
В ответ пришли только один вопрос в виде JSON:
{
"question_text": текст вопроса мне,
"variable": название переменной, которую запрашиваем у меня
}

Ко мне всегда обращайся на "ты".
В одном вопросе нужно запрашивать только один пункт.
Вопросы задавай в порядке, в котором они идут в эталонном профиле.

Вот информация обо мне:
'''

YA_GPT_V2T = '''Посмотри текст, измени в нем обращение на "вы" на обращение на "ты" во всех случаях и формах. И верни исправленный текст.'''

def welcome(user):
    return f'Привет, {user.first_name}! {SELECT_VACANCIES}'

def lets_continue_with_vacancy(user):
    return f'{user.first_name}, c возвращением! Давай продолжим наше общение по вакансии "{user.get_main_vacancy().name}"?'

def main_vacancy_coincedence_analysis_success(user):
    return f'''{user.first_name}, я проанализировала твой профиль - ты успешно прошел на этап собеседования со специалистом ОТП Банка!
    
Передаю твое резюме и контактные данные - в ближайшие дни с тобой свяжется специалист, чтобы договориться о встрече.

Может, у тебя есть какие-то вопросы, которые хочется задать перед собеседованием? Я постараюсь ответить.'''

def main_vacancy_coincedence_analysis_fail(user, user_vacancy):
    return f'''{user.first_name}, я проанализировала твой профиль - к сожалению, некоторых параметров не хватает для соответствия этой вакансии {user.get_main_vacancy().name}. Вот мои рекомендации на будущее: 

{user_vacancy.recommendations}
    
Попробуй последовать этим рекомендациям, и я уверена,  что ты сможешь получить работу своей мечты! 

Копию рекомендаций также отправляю тебе на почту.

Также не забывай, что ты можешь просматривать открытые вакансии в ОТП Банке здесь, а при обновлении опыта работы, обучения или навыков можешь прийти ко мне снова, и мы обновим твое резюме.

Есть ли у тебя  какие-то вопросы, которые хочется задать? Я постараюсь ответить.'''

def clearing_and_isolating(data):
    return f'''{YA_GPT_PROMPT_PREFIX}\n\n{data}'''

def check_full_profile(user: User):
    text = '''Проверь, что мы имеем всю информацию о пользователе.'''

def v2t(text):
    return f'''{YA_GPT_V2T}\n\n{text}'''